spring:
  application:
    name: catalog-service
  lifecycle:
    timeout-per-shutdown-phase: 15s   # Defines a 15 s grace period
  config:
    import: "optional:configserver:"
#  cloud:
#    config:
#      uri: http://localhost:8888
#      request-connect-timeout: 5000 # Timeout on waiting to connect to the config server (ms)
#      request-read-timeout: 5000    # Timeout on waiting to read configuration data from the config server (ms)
#      fail-fast: true
#      retry:
#        max-attempts: 6
#        initial-interval: 1000
#        max-interval: 2000
#        multiplier: 1.1
  datasource:
    username: user
    password: password
    url: jdbc:postgresql://localhost:5432/polardb_catalog
    hikari: # Spring Boot uses HikariCP for connection pooling, and you can configure it from the application.yml file
      connection-timeout: 2000 # The maximum time (ms) to spend waiting to get a connection from the pool
      maximum-pool-size: 5 # The maximum number of connections HikariCP will keep in the pool
#  sql:     # Removed due to flyway being used instead
#    init:
#      mode: always

server:
  port: 9001
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50
      min-spare: 5
  shutdown: graceful              # Enable graceful shutdown
polar:
  greeting: Welcome to the local book catalog!

management:
  endpoints:
    web:
      exposure:
        include: refresh